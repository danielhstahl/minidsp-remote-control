context.objects = [
    # An example clock reading from /dev/ptp0. You can also specify the network interface name,
    # pipewire will query the interface for the current active PHC index. Another option is to
    # sync the ptp clock to CLOCK_TAI and then set clock.id = tai, keep in mind that tai may
    # also be synced by a NTP client.
    # The precedence is: device, interface, id
    { factory = spa-node-factory
        args = {
            factory.name    = support.node.driver
            node.name       = PTP0-Driver
            node.group      = pipewire.ptp0
            # This driver should only be used for network nodes marked with group
            priority.driver = 100000
            clock.name      = "clock.system.ptp0"
            ### Please select the PTP hardware clock here
            # Interface name is the preferred method of specifying the PHC
            clock.interface = "eth0"
            clock.device    = "/dev/ptp0"
            #clock.id        = tai
            # Lower this in case of periodic out-of-sync
            resync.ms       = 1.5
            object.export   = true
        }
    }
]
context.modules = [
    { name = libpipewire-module-rtp-source
      args = {
        source.ip = "192.168.88.174"  # IP of the osmc PI
        source.port = 46000
        #local.port = 46000
        #local.ifname = "eth0"
        sess.latency.msec = 4  #
        #sess.media = "audio"
        #88:a2:9e:0d:23:1e is mac address
        # sess.ts-refclk = "ptp=IEEE1588-2008:88-a2-9e-FF-FE-0d-23-1e:0"
        stream.props = {
          node.name = "rtp_source"
          node.description = "Network Audio Echo"
          media.class = Audio/Source
        }
      }
    },
    { name = libpipewire-module-loopback
      args = {
        capture.props = {
          node.name = "rtp_capture"
          node.target = "rtp_source"
          media.class = Audio/Sink #Source
        }
        playback.props = {
          node.name = "htx_output"
          node.target = "alsa_output.usb-miniDSP_miniDSP_Flex_HTx-00.analog-surround-71"  # Your sink; `pw-dump | grep sink` for name
          media.class = Audio/Source
        }
        audio.position = [ FL FR ]
        audio.rate = 48000 ## hmm, but hardware supports "only" 441 and 96?
        audio.channels = 2
        audio.format = "S32_LE"  # Match your hw
        latency.msec = 4  # Sync buffer; tune like a Kantian imperative
      }
    }
]
